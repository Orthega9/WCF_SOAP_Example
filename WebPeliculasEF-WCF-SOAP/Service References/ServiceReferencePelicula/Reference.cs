//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPeliculasEF_WCF_SOAP.ServiceReferencePelicula {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePelicula.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaPeliculas", ReplyAction="http://tempuri.org/IService1/ListaPeliculasResponse")]
        WCFServicePeliculas.CLases.PeliculaMax[] ListaPeliculas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaPeliculas", ReplyAction="http://tempuri.org/IService1/ListaPeliculasResponse")]
        System.Threading.Tasks.Task<WCFServicePeliculas.CLases.PeliculaMax[]> ListaPeliculasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Obtener", ReplyAction="http://tempuri.org/IService1/ObtenerResponse")]
        WCFServicePeliculas.CLases.PeliculaMax Obtener(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Obtener", ReplyAction="http://tempuri.org/IService1/ObtenerResponse")]
        System.Threading.Tasks.Task<WCFServicePeliculas.CLases.PeliculaMax> ObtenerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Agregar", ReplyAction="http://tempuri.org/IService1/AgregarResponse")]
        void Agregar(WCFServicePeliculas.EF.Pelicula p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Agregar", ReplyAction="http://tempuri.org/IService1/AgregarResponse")]
        System.Threading.Tasks.Task AgregarAsync(WCFServicePeliculas.EF.Pelicula p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Editar", ReplyAction="http://tempuri.org/IService1/EditarResponse")]
        void Editar(WCFServicePeliculas.EF.Pelicula p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Editar", ReplyAction="http://tempuri.org/IService1/EditarResponse")]
        System.Threading.Tasks.Task EditarAsync(WCFServicePeliculas.EF.Pelicula p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Eliminar", ReplyAction="http://tempuri.org/IService1/EliminarResponse")]
        void Eliminar(WCFServicePeliculas.EF.Pelicula p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Eliminar", ReplyAction="http://tempuri.org/IService1/EliminarResponse")]
        System.Threading.Tasks.Task EliminarAsync(WCFServicePeliculas.EF.Pelicula p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaGenero", ReplyAction="http://tempuri.org/IService1/ListaGeneroResponse")]
        WCFServicePeliculas.CLases.GeneroMax[] ListaGenero();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaGenero", ReplyAction="http://tempuri.org/IService1/ListaGeneroResponse")]
        System.Threading.Tasks.Task<WCFServicePeliculas.CLases.GeneroMax[]> ListaGeneroAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebPeliculasEF_WCF_SOAP.ServiceReferencePelicula.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebPeliculasEF_WCF_SOAP.ServiceReferencePelicula.IService1>, WebPeliculasEF_WCF_SOAP.ServiceReferencePelicula.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFServicePeliculas.CLases.PeliculaMax[] ListaPeliculas() {
            return base.Channel.ListaPeliculas();
        }
        
        public System.Threading.Tasks.Task<WCFServicePeliculas.CLases.PeliculaMax[]> ListaPeliculasAsync() {
            return base.Channel.ListaPeliculasAsync();
        }
        
        public WCFServicePeliculas.CLases.PeliculaMax Obtener(int id) {
            return base.Channel.Obtener(id);
        }
        
        public System.Threading.Tasks.Task<WCFServicePeliculas.CLases.PeliculaMax> ObtenerAsync(int id) {
            return base.Channel.ObtenerAsync(id);
        }
        
        public void Agregar(WCFServicePeliculas.EF.Pelicula p) {
            base.Channel.Agregar(p);
        }
        
        public System.Threading.Tasks.Task AgregarAsync(WCFServicePeliculas.EF.Pelicula p) {
            return base.Channel.AgregarAsync(p);
        }
        
        public void Editar(WCFServicePeliculas.EF.Pelicula p) {
            base.Channel.Editar(p);
        }
        
        public System.Threading.Tasks.Task EditarAsync(WCFServicePeliculas.EF.Pelicula p) {
            return base.Channel.EditarAsync(p);
        }
        
        public void Eliminar(WCFServicePeliculas.EF.Pelicula p) {
            base.Channel.Eliminar(p);
        }
        
        public System.Threading.Tasks.Task EliminarAsync(WCFServicePeliculas.EF.Pelicula p) {
            return base.Channel.EliminarAsync(p);
        }
        
        public WCFServicePeliculas.CLases.GeneroMax[] ListaGenero() {
            return base.Channel.ListaGenero();
        }
        
        public System.Threading.Tasks.Task<WCFServicePeliculas.CLases.GeneroMax[]> ListaGeneroAsync() {
            return base.Channel.ListaGeneroAsync();
        }
    }
}
